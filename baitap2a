//Yêu cầu bài tập
//1. Tạo một lớp Employee với các thuộc tính : id, tên, tuổi và lương.
//2. Tạo các phương thức để truy cập và cập nhật thông tin nhân viên.
//3. Tạo một lớp Manager kế thừa từ Employee với thêm thuộc tính số nhân viên quản lý.
//4. Tạo một lớp Company để quản lý danh sách nhân viên và quản lý.
//5. Triển khai các chức năng : thêm nhân viên, hiển thị thông tin nhân viên, và tính tổng lương của công ty.

#include <iostream>
#include <string>
#include <vector>
class Employee {
protected:
	int id;
	std::string name;
	int age;
	double salary;
public:
	Employee(int _id, std::string _name, int _age, double _salary)
		: id(_id), name(_name), age(_age), salary(_salary) {}
	virtual void displayInfo() const {
		std::cout << "ID: " << id << ", Ten: " << name
			<< ", Tuoi: " << age << ", Luong: " << salary << std::endl;
	}
	virtual double getSalary() const {
		return salary;
	}
	void increaseSalary(double amount) {
		salary += amount;
	}
};
class Manager : public Employee {
private:
	int teamSize;
public:
	Manager(int _id, std::string _name, int _age, double _salary, int _teamSize)
		: Employee(_id, _name, _age, _salary), teamSize(_teamSize) {}
	void displayInfo() const override {
		Employee::displayInfo();
		std::cout << "So nhan vien quan ly: " << teamSize << std::endl;
	}
	double getSalary() const override {
		return salary + (teamSize * 1000); // Phụ cấp quản lý
	}
};
class Company {
private:
	std::vector<Employee*> employees;
public:
	void addEmployee(Employee* emp) {
		employees.push_back(emp);
	}
	void displayAllEmployees() const {
		for (const auto& emp : employees) {
			emp->displayInfo();
			std::cout << "------------------------" << std::endl;
		}
	}
	double getTotalSalary() const {
		double total = 0;
		for (const auto& emp : employees) {
			total += emp->getSalary();
		}
		return total;
	}
	~Company() {
		for (auto emp : employees) {
			delete emp;
		}
	}
};
int main() {
	Company myCompany;
	myCompany.addEmployee(new Employee(1, "Nguyen Van A", 30, 10000000));
	myCompany.addEmployee(new Employee(2, "Tran Thi B", 25, 8000000));
	myCompany.addEmployee(new Manager(3, "Le Van C", 40, 20000000, 5));
	std::cout << "Thong tin tat ca nhan vien:" << std::endl;
	myCompany.displayAllEmployees();
	std::cout << "Tong luong cong ty: " << myCompany.getTotalSalary() <<
		std::endl;
	return 0;
}
